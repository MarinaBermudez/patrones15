//Empresa.cs
using System;

public abstract class Empresa
{
    public string nombre { get; protected set; }
    public string email { get; protected set; }
    public string direccion { get; protected set; }

    public Empresa(string nombre, string email, string direccion)
    {
        this.nombre = nombre;
        this.email = email;
        this.direccion = direccion;
    }

    public abstract bool agregaFilial(Empresa filial);

    public abstract void aceptaVisitante(Visitante visitante);
}

//EmpresaMadre.cs
using System;
using System.Collections.Generic;

public class EmpresaMadre : Empresa
{
    protected IList<Empresa> filiales =
        new List<Empresa>();

    public EmpresaMadre(string nombre, string email, string
      direccion)
        : base(nombre, email, direccion) { }

    public override void aceptaVisitante(Visitante visitante)
    {
        visitante.visita(this);
        foreach (Empresa filial in filiales)
            filial.aceptaVisitante(visitante);
    }

    public override bool agregaFilial(Empresa filial)
  {
    filiales.Add(filial);
    return true;
  }
}
//EmpresaSinFilial.cs
using System;

public class EmpresaSinFilial : Empresa
{
    public EmpresaSinFilial(string nombre, string email,
    string direccion)
        : base(nombre, email, direccion) { }

    public override void aceptaVisitante(Visitante visitante)
    {
        visitante.visita(this);
    }

    public override bool agregaFilial(Empresa filial)
    {
        return false;
    }
}

//Usuario.cs
public class Usuario
{
    static void Main(string[] args)
    {
        Empresa empresa1 = new EmpresaSinFilial("empresa1",
        "info@empresa1.com", "calle de la empresa 1");
        Empresa empresa2 = new EmpresaSinFilial("empresa2",
        "info@empresa2.com", "calle de la empresa 2");
        Empresa grupo1 = new EmpresaMadre("grupo1",
        "info@grupo1.com", "calle del grupo 1");
        grupo1.agregaFilial(empresa1);
        grupo1.agregaFilial(empresa2);
        Empresa empresa3 = new EmpresaSinFilial("empresa3",
          "info@empresa3.com", "calle de la empresa 3");
        Empresa grupo2 = new EmpresaMadre("grupo2",
          "info@grupo2.com", "calle del grupo 2");
        grupo2.agregaFilial(grupo1);
        grupo2.agregaFilial(empresa3);
        grupo2.aceptaVisitante(new VisitanteMailingComercial
          ());
    }
}

//Visitante.cs
public interface Visitante
{
    void visita(EmpresaSinFilial empresa);
    void visita(EmpresaMadre empresa);
}

//VisitanteMailingComercial.cs
using System;

public class VisitanteMailingComercial : Visitante
{
    public void visita(EmpresaSinFilial
      empresa)
    {
        Console.WriteLine("Envía un email a " +
          empresa.nombre + " dirección: " + empresa.email
          + " Propuesta comercial para su empresa");
    }

    public void visita(EmpresaMadre empresa)
    {
        Console.WriteLine("Envía un email a " +
          empresa.nombre + " dirección: " + empresa.email
          + " Propuesta comercial para su grupo");
        Console.WriteLine("Impresión de un correo electrónico para " +
          empresa.nombre + " dirección: " +
          empresa.direccion +
          " Propuesta comercial para su grupo");
    }
}
